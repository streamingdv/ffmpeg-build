name: CI Windows
on:
  workflow_dispatch:

jobs:
  build-binaries-windows:
    name: Build Windows lib
    runs-on: windows-latest

    strategy:
      matrix:
        include:
          - sys: UCRT64
            env: ucrt-x86_64
            arch: 64bit
            archValue: 64
            archAltValue: x64
          - sys: MINGW32 # disable for testing now
            env: i686
            arch: 32bit
            archValue: 32
            archAltValue: x32

    steps:
      - name: Checkout fffmpeg-build repository
        uses: actions/checkout@v2

      - name: Setup MSYS2
        uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.sys }}
          update: true
          install: >-
            base-devel
            git
            unzip
            mingw-w64-${{ matrix.env }}-jq
            mingw-w64-${{ matrix.env }}-gcc
            mingw-w64-${{ matrix.env }}-pkg-config
            mingw-w64-${{ matrix.env }}-vapoursynth
            mingw-w64-${{ matrix.env }}-meson
            mingw-w64-${{ matrix.env }}-ninja
            mingw-w64-${{ matrix.env }}-spirv-tools
            mingw-w64-${{ matrix.env }}-spirv-cross
            mingw-w64-${{ matrix.env }}-vulkan
            mingw-w64-${{ matrix.env }}-vulkan-headers
            mingw-w64-${{ matrix.env }}-vulkan-loader
            mingw-w64-${{ matrix.env }}-libdovi
            mingw-w64-${{ matrix.env }}-lcms2
            mingw-w64-${{ matrix.env }}-shaderc
            mingw-w64-${{ matrix.env }}-glslang
            mingw-w64-${{ matrix.env }}-cmake
            mingw-w64-${{ matrix.env }}-python
            
            

      - name: Upload Artifact
        uses: actions/upload-artifact@v4
        with:
          name: windows-libjerasure-jni-artifact-${{ matrix.arch }}
          path: ${{github.workspace}}/build/nativeBinaries/libplacebo-jni-native-${{ matrix.archValue }}.dll
