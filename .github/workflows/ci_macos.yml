name: CI macOS

on:
  workflow_dispatch:

jobs:
  build-binaries-macos:
    name: Build macOS lib
    strategy:
      matrix:
        arch: [x86_64, arm64] # Define architectures

    runs-on: ${{ matrix.arch == 'x86_64' && 'macos-14-large' || 'macos-14' }} # Conditional runner assignment

    steps:
      - name: Checkout ffmpeg-build repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: |
          brew update
          brew install pkg-config nasm yasm cmake ninja meson jq \
                       glslang vulkan-headers vulkan-loader \
                       lcms2 vapoursynth

      - name: Clean up existing Vulkan SDK files and directories
        run: |
          sudo rm -rf /usr/local/include/spirv-tools /usr/local/include/spirv /usr/local/include/spirv_cross \
                      /usr/local/include/glslang /usr/local/include/vk_video /usr/local/include/vulkan \
                      /usr/local/lib/libvulkan.dylib /usr/local/lib/libSPIRV-Tools-shared.dylib \
                      /usr/local/lib/libvulkan.1.dylib /usr/local/lib/pkgconfig/SPIRV-Tools.pc \
                      /usr/local/lib/pkgconfig/SPIRV-Tools-shared.pc /usr/local/lib/pkgconfig/vulkan.pc \
                      /usr/local/share/vulkan || true
          sudo rm -f /usr/local/bin/{spirv-val,spirv-remap,spirv-dis,spirv-lint,spirv-opt,glslang,spirv-cfg,spirv-lesspipe.sh,spirv-reduce,spirv-link,glslangValidator,spirv-as} || true

      - name: Download and Install Vulkan SDK Manually using DMG
        run: |
          # Download the LunarG Vulkan SDK DMG
          VULKAN_VERSION="1.3.280.1"
          curl -LO https://sdk.lunarg.com/sdk/download/${VULKAN_VERSION}/mac/vulkansdk-macos-${VULKAN_VERSION}.dmg
          
          # Mount the DMG file
          MOUNT_PATH=$(hdiutil mount vulkansdk-macos-${VULKAN_VERSION}.dmg | tail -n1 | awk '{print $3}')
          
          # Install Vulkan SDK from DMG
          sudo "${MOUNT_PATH}/InstallVulkan.app/Contents/MacOS/InstallVulkan" \
            --root ~/VulkanSDK/${VULKAN_VERSION} \
            --accept-licenses --default-answer --confirm-command \
            install com.lunarg.vulkan.core com.lunarg.vulkan.usr com.lunarg.vulkan.sdl2 com.lunarg.vulkan.glm com.lunarg.vulkan.volk com.lunarg.vulkan.vma
          
          # Unmount the DMG after installation
          hdiutil unmount "${MOUNT_PATH}"

      - name: Set environment variables
        run: |
          # Set environment variables for Vulkan SDK
          export VULKAN_SDK=~/VulkanSDK/1.3.280.1
          export PATH="$VULKAN_SDK/bin:$PATH"
          export CFLAGS="-arch ${{ matrix.arch }} -I$VULKAN_SDK/include -I$(brew --prefix vulkan-headers)/include -Wno-error=asm-operand-widths"
          export LDFLAGS="-arch ${{ matrix.arch }} -L$VULKAN_SDK/lib -L$(brew --prefix vulkan-loader)/lib"
          export PKG_CONFIG_PATH="$VULKAN_SDK/lib/pkgconfig:$(brew --prefix vulkan-loader)/lib/pkgconfig:$PKG_CONFIG_PATH"
          export CC="clang"
          export CXX="clang++"
          echo "Environment variables set: VULKAN_SDK=$VULKAN_SDK, CFLAGS=$CFLAGS, LDFLAGS=$LDFLAGS, PKG_CONFIG_PATH=$PKG_CONFIG_PATH"

      - name: Checkout FFmpeg at Tag n6.1.2
        uses: actions/checkout@v3
        with:
          repository: 'FFmpeg/FFmpeg'
          ref: 'n6.1.2'
          path: 'ffmpeg-6.1.2'

      - name: Apply FFmpeg patches
        run: |
          cd ffmpeg-6.1.2
          git apply ../patches/vaapi_h264.patch

      - name: Check Patch Application
        run: |
          cd ffmpeg-6.1.2
          git diff

      - name: Configure FFmpeg
        run: |
          cd ffmpeg-6.1.2
          ./configure --disable-all --disable-gpl --disable-iconv \
                      --enable-vulkan --enable-static --enable-pic \
                      --enable-avcodec --enable-avformat \
                      --enable-decoder=h264 --enable-decoder=hevc \
                      --enable-hwaccel=h264_vulkan --enable-hwaccel=hevc_vulkan \
                      --enable-hwaccel=h264_videotoolbox --enable-hwaccel=hevc_videotoolbox \
                      --arch=${{ matrix.arch }}

      - name: Build FFmpeg
        run: |
          cd ffmpeg-6.1.2
          make -j$(sysctl -n hw.logicalcpu)

      - name: Zip FFmpeg Build
        run: |
          cd ffmpeg-6.1.2
          zip -r ffmpeg_build_${{ matrix.arch }}.zip .

      - name: Upload FFmpeg build
        uses: actions/upload-artifact@v4
        with:
          name: ffmpeg-build-artifact-macos-${{ matrix.arch }}
          path: ffmpeg-6.1.2/ffmpeg_build_${{ matrix.arch }}.zip
